// Script para criar usu√°rio RafaelRosa
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Vari√°veis de ambiente n√£o configuradas!');
  console.log('Certifique-se de que NEXT_PUBLIC_SUPABASE_URL e SUPABASE_SERVICE_ROLE_KEY est√£o definidas no .env.local');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

async function createRafaelUser() {
  try {
    console.log('üöÄ Criando usu√°rio RafaelRosa...\n');

    // Dados do usu√°rio
    const userEmail = 'rafael17roomt@Outlook.com';
    const userPassword = 'Admin123';
    const userName = 'RafaelRosa';

    console.log(`üìß Email: ${userEmail}`);
    console.log(`üîë Senha: [PROTEGIDO]`);
    console.log(`üë§ Nome de usu√°rio: ${userName}\n`);

    // Primeiro, verificar se o usu√°rio j√° existe
    console.log('üîç Verificando usu√°rios existentes...');
    const { data: existingUsers, error: listError } = await supabase.auth.admin.listUsers();

    if (listError) {
      console.error('‚ùå Erro ao listar usu√°rios:', listError.message);
      throw listError;
    }

    const existingUser = existingUsers.users.find(u => u.email === userEmail);

    if (existingUser) {
      console.log('‚ÑπÔ∏è  Usu√°rio j√° existe. Atualizando dados...');

      // Atualizar dados do usu√°rio existente
      const { data: updatedUser, error: updateError } = await supabase.auth.admin.updateUserById(
        existingUser.id,
        {
          password: userPassword,
          email_confirm: true,
          user_metadata: {
            full_name: userName,
            role: 'admin' // ou 'user', dependendo da permiss√£o desejada
          }
        }
      );

      if (updateError) {
        console.error('‚ùå Erro ao atualizar usu√°rio:', updateError.message);
        throw updateError;
      }

      console.log('‚úÖ Dados do usu√°rio atualizados com sucesso!');

      // Criar/atualizar perfil
      const { error: profileError } = await supabase
        .from('profiles')
        .upsert({
          id: existingUser.id,
          full_name: userName,
          role: 'admin'
        });

      if (profileError) {
        console.warn('‚ö†Ô∏è  Erro ao criar/atualizar perfil:', profileError.message);
      } else {
        console.log('‚úÖ Perfil do usu√°rio criado/atualizado!');
      }
    } else {
      console.log('üìù Criando novo usu√°rio...');

      // Criar usu√°rio usando Admin API
      const { data: { user }, error: createError } = await supabase.auth.admin.createUser({
        email: userEmail,
        password: userPassword,
        email_confirm: true, // Confirmar email automaticamente
        user_metadata: {
          full_name: userName,
          role: 'admin' // ou 'user', dependendo da permiss√£o desejada
        }
      });

      if (createError) {
        console.error('‚ùå Erro ao criar usu√°rio:', createError.message);
        throw createError;
      }

      console.log('‚úÖ Usu√°rio criado com sucesso!');
      console.log(`üë§ ID do usu√°rio: ${user.id}`);

      // Criar perfil do usu√°rio
      const { error: profileError } = await supabase
        .from('profiles')
        .insert({
          id: user.id,
          full_name: userName,
          role: 'admin'
        });

      if (profileError) {
        console.warn('‚ö†Ô∏è  Erro ao criar perfil:', profileError.message);
      } else {
        console.log('‚úÖ Perfil do usu√°rio criado!');
      }
    }

    console.log('\nüéâ Configura√ß√£o do usu√°rio conclu√≠da!');

  } catch (error) {
    console.error('‚ùå Erro ao criar usu√°rio:', error.message);

    if (error.message.includes('relation "profiles" does not exist')) {
      console.log('\nüí° Dica: Execute primeiro o script de corre√ß√£o do banco:');
      console.log('   node supabase/scripts/run-sql-fix.js');
    }
  }
}

createRafaelUser();